#!/usr/bin/env python3
"""
Maggie Stock AI - 免費版流量入口
標普500股票查詢 + 每日3次限制 + 升級引導
"""
import sys
import requests
import os
import json
import hashlib
from datetime import datetime, timedelta
from typing import Dict, List, Optional

class MaggieStockFree:
    def __init__(self):
        self.telegram_token = os.getenv('TELEGRAM_BOT_TOKEN')
        self.telegram_chat_id = os.getenv('TELEGRAM_CHAT_ID')
        
        # 免費版配置
        self.daily_limit = 3
        self.sp500_symbols = self.load_sp500_list()
        
        # 付費版價格
        self.basic_price = "$19.99"
        self.pro_price = "$49.99"
        
        # 用戶數據存儲 (簡化版，實際應用用數據庫)
        self.user_data = {}
        
        if not self.telegram_token:
            raise ValueError("缺少 Telegram Bot Token")
    
    def load_sp500_list(self) -> List[str]:
        """加載標普500股票代碼清單"""
        return [
            'AAPL', 'MSFT', 'GOOGL', 'AMZN', 'NVDA', 'TSLA', 'META', 'BRK.B',
            'UNH', 'JNJ', 'V', 'PG', 'JPM', 'HD', 'MA', 'PFE', 'BAC', 'ABBV',
            'KO', 'PEP', 'COST', 'DIS', 'ADBE', 'CRM', 'NFLX', 'XOM', 'TMO',
            'VZ', 'ACN', 'DHR', 'LLY', 'NKE', 'QCOM', 'TXN', 'NEE', 'PM',
            'UPS', 'RTX', 'LOW', 'INTU', 'AMD', 'SPGI', 'HON', 'SBUX', 'GS',
            'CVX', 'LIN', 'T', 'UNP', 'SCHW', 'AXP', 'BLK', 'MDT', 'CAT',
            'DE', 'MMM', 'AMT', 'IBM', 'TJX', 'GE', 'MU', 'NOW', 'ISRG',
            'AMAT', 'CI', 'WMT', 'MO', 'GILD', 'COP', 'SO', 'ANTM', 'CVS',
            'FIS', 'PYPL', 'C', 'ZTS', 'MDLZ', 'TGT', 'SYK', 'CSX', 'USB',
            'BMY', 'WM', 'EOG', 'DUK', 'APD', 'CL', 'NSC', 'AON', 'ATVI'
        ]
    
    def get_user_id_from_message(self, message_text: str) -> str:
        """從消息中提取用戶ID (簡化版)"""
        # 實際應用中從Telegram API獲取用戶ID
        return hashlib.md5(message_text.encode()).hexdigest()[:8]
    
    def check_user_limit(self, user_id: str) -> tuple[bool, int]:
        """檢查用戶每日查詢限制"""
        today = datetime.now().date()
        
        if user_id not in self.user_data:
            self.user_data[user_id] = {
                'last_date': today,
                'daily_count': 0,
                'total_queries': 0
            }
        
        user = self.user_data[user_id]
        
        # 重置每日計數
        if user['last_date'] != today:
            user['daily_count'] = 0
            user['last_date'] = today
        
        remaining = self.daily_limit - user['daily_count']
        can_query = remaining > 0
        
        return can_query, remaining
    
    def update_user_count(self, user_id: str):
        """更新用戶查詢計數"""
        if user_id in self.user_data:
            self.user_data[user_id]['daily_count'] += 1
            self.user_data[user_id]['total_queries'] += 1
    
    def get_stock_data(self, symbol: str) -> Dict:
        """獲取股票基礎數據"""
        try:
            url = f"https://query1.finance.yahoo.com/v8/finance/chart/{symbol}"
            headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'}
            
            response = requests.get(url, headers=headers, timeout=10)
            data = response.json()
            
            if not data.get('chart') or not data['chart'].get('result'):
                return {'error': '股票代碼無效或數據不可用'}
            
            result = data['chart']['result'][0]
            meta = result['meta']
            
            # 基礎數據
            current_price = meta['regularMarketPrice']
            previous_close = meta['previousClose']
            change = current_price - previous_close
            change_percent = (change / previous_close) * 100
            
            # 獲取一些歷史數據用於簡單技術指標
            quotes = result.get('indicators', {}).get('quote', [{}])[0]
            closes = [p for p in quotes.get('close', []) if p is not None]
            
            # 簡單移動平均
            sma_20 = sum(closes[-20:]) / 20 if len(closes) >= 20 else None
            sma_50 = sum(closes[-50:]) / 50 if len(closes) >= 50 else None
            
            return {
                'symbol': symbol,
                'company_name': meta.get('longName', symbol),
                'current_price': current_price,
                'previous_close': previous_close,
                'change': change,
                'change_percent': change_percent,
                'volume': meta.get('regularMarketVolume', 0),
                'market_cap': meta.get('marketCap'),
                'day_high': meta.get('regularMarketDayHigh'),
                'day_low': meta.get('regularMarketDayLow'),
                'sma_20': sma_20,
                'sma_50': sma_50,
                'status_emoji': self.get_status_emoji(change_percent)
            }
        except Exception as e:
            return {'error': f'數據獲取失敗: {str(e)}'}
    
    def get_status_emoji(self, change_percent: float) -> str:
        """根據漲跌幅返回狀態表情"""
        if change_percent >= 2:
            return '🔥'
        elif change_percent >= 0.5:
            return '📈'
        elif change_percent >= 0:
            return '📊'
        elif change_percent >= -2:
            return '📉'
        else:
            return '💥'
    
    def generate_upgrade_message(self, trigger_type: str = "limit") -> str:
        """生成升級推廣信息"""
        if trigger_type == "limit":
            return f"""
🚫 **免費版每日查詢已達上限 (3次)**

💎 **升級VIP，解鎖強大功能！**

🥈 **VIP基礎版 {self.basic_price}/月**:
✅ 全美股8000+支無限查詢
✅ 新股/IPO實時追蹤  
✅ 技術分析 (RSI/MACD/布林帶)
✅ 即時新聞整合與AI摘要
✅ 無延遲實時數據

🥇 **VIP專業版 {self.pro_price}/月**:
✅ 基礎版所有功能
✅ **期權深度分析** (Max Pain/Gamma/IV)
✅ **籌碼分析** (主力進出/大戶比例)  
✅ **Notion投資組合面板**
✅ **智能價格警報**
✅ **多平台同步推送**

🔥 **限時優惠**: 前100名用戶享5折優惠！

立即升級: [升級連結]
客服諮詢: @maggie_stock_support
"""
        elif trigger_type == "non_sp500":
            return f"""
🚫 **免費版僅支持標普500股票查詢**

您查詢的股票不在標普500範圍內。

💎 **升級VIP基礎版 {self.basic_price}/月**
🌍 解鎖全美股8000+支股票查詢！

包含：
✅ NASDAQ全部股票  
✅ NYSE完整覆蓋
✅ 新股/IPO實時追蹤
✅ 技術分析指標
✅ 無限查詢次數

🎯 **熱門非標普500股票**:
RBLX, PLTR, COIN, HOOD, RIVN, LCID...

立即升級: [升級連結]
"""
        else:
            return f"""
💡 **發現更多專業功能**

免費版很棒，但VIP版更強大！

🥇 **VIP專業版獨有**:
🎯 **Max Pain Theory** - 預測主力操控目標
⚡ **Gamma Exposure** - 識別支撐阻力牆  
📊 **IV Crush分析** - 避開期權陷阱
🧠 **籌碼分析** - 追蹤主力資金動向

💼 **專業投資者的選擇**
每天省下2杯咖啡錢，獲得華爾街級別分析！

免費試用7天: [試用連結]
"""
    
    def format_stock_response(self, stock_data: Dict, remaining_queries: int) -> str:
        """格式化股票查詢回應"""
        if 'error' in stock_data:
            return f"❌ {stock_data['error']}"
        
        # 基礎信息
        response = f"""
{stock_data['status_emoji']} **{stock_data['company_name']} ({stock_data['symbol']})**

💰 **價格資訊**
當前價格: ${stock_data['current_price']:.2f}
漲跌: {stock_data['change']:+.2f} ({stock_data['change_percent']:+.2f}%)
成交量: {stock_data['volume']:,}
"""
        
        # 市值信息
        if stock_data.get('market_cap'):
            market_cap_b = stock_data['market_cap'] / 1e9
            response += f"市值: ${market_cap_b:.1f}B\n"
        
        # 價格區間
        response += f"""
📈 **今日區間**
最高: ${stock_data.get('day_high', 0):.2f}
最低: ${stock_data.get('day_low', 0):.2f}
"""
        
        # 技術指標 (免費版簡化)
        if stock_data.get('sma_20') and stock_data.get('sma_50'):
            trend = "📈 多頭" if stock_data['current_price'] > stock_data['sma_20'] > stock_data['sma_50'] else "📉 空頭"
            response += f"""
📊 **技術面**
20日均線: ${stock_data['sma_20']:.2f}
50日均線: ${stock_data['sma_50']:.2f}
趨勢: {trend}
"""
        
        # 查詢狀態
        response += f"""
📱 **免費版狀態**
今日剩餘查詢: {remaining_queries}次
升級VIP享無限查詢: [升級連結]
"""
        
        # 升級提示 (軟性推廣)
        if remaining_queries <= 1:
            response += f"""
💡 **提醒**: 今日查詢即將用完
VIP基礎版每月僅需 {self.basic_price}，享受無限查詢！
"""
        
        return response
    
    def process_stock_query(self, symbol: str, user_id: str) -> str:
        """處理股票查詢請求"""
        symbol = symbol.upper().strip()
        
        # 檢查是否為標普500股票
        if symbol not in self.sp500_symbols:
            upgrade_msg = self.generate_upgrade_message("non_sp500")
            return f"""
🚫 **該股票不在免費版範圍內**

免費版僅支持標普500股票查詢。
您查詢的 **{symbol}** 需要升級VIP版本。

{upgrade_msg}

💡 **免費版支持的熱門股票**:
AAPL, MSFT, GOOGL, AMZN, NVDA, TSLA, META
輸入 /list 查看完整標普500清單
"""
        
        # 檢查每日查詢限制
        can_query, remaining = self.check_user_limit(user_id)
        if not can_query:
            return self.generate_upgrade_message("limit")
        
        # 獲取股票數據
        stock_data = self.get_stock_data(symbol)
        if 'error' in stock_data:
            return f"❌ {stock_data['error']}\n\n請確認股票代碼正確，或輸入 /help 查看使用說明"
        
        # 更新用戶查詢計數
        self.update_user_count(user_id)
        remaining -= 1
        
        # 格式化回應
        return self.format_stock_response(stock_data, remaining)
    
    def generate_welcome_message(self) -> str:
        """生成歡迎信息"""
        return f"""
🎉 **歡迎使用 Maggie Stock AI！**

🆓 **免費版功能**:
📊 標普500股票實時查詢
📈 基礎技術分析
💰 市值和價格資訊
⏰ 每日3次免費查詢

💡 **使用方法**:
直接輸入股票代碼，例如：
• `AAPL` - 查詢蘋果
• `TSLA` - 查詢特斯拉  
• `NVDA` - 查詢英偉達

📋 **常用指令**:
/help - 使用說明
/list - 標普500清單
/upgrade - 升級VIP
/status - 查詢狀態

🎯 **熱門股票**: AAPL, TSLA, NVDA, MSFT, GOOGL

💎 想要更多功能？升級VIP享受：
• 全美股8000+支查詢
• 期權Max Pain分析  
• 籌碼分析
• 無限查詢次數

立即開始查詢吧！📈
"""
    
    def generate_help_message(self) -> str:
        """生成幫助信息"""
        return f"""
📚 **Maggie Stock AI 使用指南**

🔍 **查詢方法**:
直接輸入股票代碼（無需/符號）
例如：AAPL, TSLA, MSFT

📊 **免費版限制**:
• 僅支持標普500股票
• 每日3次查詢限制
• 基礎技術分析

💎 **VIP版本功能**:
🥈 基礎版 {self.basic_price}/月:
• 全美股8000+支查詢
• 技術指標完整分析
• 新股/IPO追蹤

🥇 專業版 {self.pro_price}/月:
• Max Pain/Gamma分析
• 籌碼分析
• 智能警報

🤝 **客服支持**:
問題回報: @maggie_stock_support
功能建議: feedback@maggiestock.ai

💡 輸入任何標普500股票代碼開始體驗！
"""
    
    def send_telegram_message(self, message: str) -> bool:
        """發送消息到Telegram"""
        try:
            if not self.telegram_chat_id:
                print("📱 Telegram Chat ID 未設置，僅輸出到控制台")
                print("=" * 50)
                print(message)
                print("=" * 50)
                return True
            
            telegram_url = f"https://api.telegram.org/bot{self.telegram_token}/sendMessage"
            telegram_data = {
                "chat_id": self.telegram_chat_id,
                "text": message,
                "parse_mode": "Markdown"
            }
            
            response = requests.post(telegram_url, json=telegram_data, timeout=10)
            return response.status_code == 200
            
        except Exception as e:
            print(f"❌ Telegram 發送錯誤: {e}")
            return False
    
    def run_demo(self):
        """運行演示"""
        print("🚀 Maggie Stock AI 免費版演示")
        print("=" * 50)
        
        # 模擬用戶查詢
        demo_user = "demo_user_001"
        
        # 歡迎消息
        welcome = self.generate_welcome_message()
        print("📱 歡迎消息:")
        print(welcome)
        print()
        
        # 模擬查詢
        queries = ["AAPL", "TSLA", "NVDA", "MSFT"]  # 第4個會觸發限制
        
        for i, symbol in enumerate(queries, 1):
            print(f"🔍 查詢 {i}: {symbol}")
            result = self.process_stock_query(symbol, demo_user)
            print(result)
            print("-" * 30)

def main():
    """主函數"""
    try:
        bot = MaggieStockFree()
        
        # 如果有環境變數，發送歡迎消息
        if bot.telegram_chat_id:
            welcome = bot.generate_welcome_message()
            bot.send_telegram_message(welcome)
        else:
            # 本地演示
            bot.run_demo()
            
    except Exception as e:
        print(f"❌ 系統錯誤: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()
